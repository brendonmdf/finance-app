const { createClient } = require('@supabase/supabase-js');

// Configura√ß√£o do Supabase
const supabaseUrl = 'https://hyracsbdyykuhhpwnweyyj.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhyYWNzYmR5eWt1aGhwbndleXlqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUyNjQ1NzIsImV4cCI6MjA3MDg0MDU3Mn0.Gz0Cf4zKjCcc23-KEXBKJmEh9-vgqPv1rCM6S66YTPQ';

const supabase = createClient(supabaseUrl, supabaseKey);

async function setupDatabase() {
  console.log('üöÄ Iniciando configura√ß√£o do banco de dados...\n');

  try {
    // 1. Inserir categorias padr√£o
    console.log('üìù Inserindo categorias padr√£o...');
    const { error: categoriesError } = await supabase
      .from('categories')
      .upsert([
        { name: 'Sal√°rio', type: 'income', color: '#22c55e', icon: 'dollar-sign' },
        { name: 'Freelancing', type: 'income', color: '#22c55e', icon: 'trending-up' },
        { name: 'Investimentos', type: 'income', color: '#22c55e', icon: 'trending-up' },
        { name: 'Moradia', type: 'expense', color: '#ef4444', icon: 'home' },
        { name: 'Alimenta√ß√£o', type: 'expense', color: '#ef4444', icon: 'utensils' },
        { name: 'Transporte', type: 'expense', color: '#ef4444', icon: 'car' },
        { name: 'Sa√∫de', type: 'expense', color: '#ef4444', icon: 'heart' },
        { name: 'Educa√ß√£o', type: 'expense', color: '#ef4444', icon: 'book-open' },
        { name: 'Lazer', type: 'expense', color: '#ef4444', icon: 'smile' }
      ], { onConflict: 'name' });

    if (categoriesError) {
      console.log('‚ö†Ô∏è  Erro ao inserir categorias:', categoriesError.message);
    } else {
      console.log('‚úÖ Categorias padr√£o inseridas com sucesso!');
    }

    // 2. Inserir m√©todos de pagamento padr√£o
    console.log('\nüìù Inserindo m√©todos de pagamento padr√£o...');
    const { error: paymentMethodsError } = await supabase
      .from('payment_methods')
      .upsert([
        { name: 'Pix' },
        { name: 'Cart√£o de Cr√©dito' },
        { name: 'Cart√£o de D√©bito' },
        { name: 'Dinheiro' },
        { name: 'Transfer√™ncia Banc√°ria' },
        { name: 'Boleto' }
      ], { onConflict: 'name' });

    if (paymentMethodsError) {
      console.log('‚ö†Ô∏è  Erro ao inserir m√©todos de pagamento:', paymentMethodsError.message);
    } else {
      console.log('‚úÖ M√©todos de pagamento padr√£o inseridos com sucesso!');
    }

    // 3. Verificar se as tabelas existem
    console.log('\nüîç Verificando estrutura das tabelas...');
    
    // Verificar tabela categories
    const { data: categories, error: categoriesCheckError } = await supabase
      .from('categories')
      .select('*')
      .limit(1);

    if (categoriesCheckError) {
      console.log('‚ö†Ô∏è  Erro ao verificar tabela categories:', categoriesCheckError.message);
    } else {
      console.log('‚úÖ Tabela categories est√° funcionando');
    }

    // Verificar tabela payment_methods
    const { data: paymentMethods, error: paymentMethodsCheckError } = await supabase
      .from('payment_methods')
      .select('*')
      .limit(1);

    if (paymentMethodsCheckError) {
      console.log('‚ö†Ô∏è  Erro ao verificar tabela payment_methods:', paymentMethodsCheckError.message);
    } else {
      console.log('‚úÖ Tabela payment_methods est√° funcionando');
    }

    // Verificar tabela transactions
    const { data: transactions, error: transactionsCheckError } = await supabase
      .from('transactions')
      .select('*')
      .limit(1);

    if (transactionsCheckError) {
      console.log('‚ö†Ô∏è  Erro ao verificar tabela transactions:', transactionsCheckError.message);
    } else {
      console.log('‚úÖ Tabela transactions est√° funcionando');
    }

    console.log('\nüéâ Verifica√ß√£o do banco de dados conclu√≠da!');
    console.log('\nüìã Resumo do que foi verificado:');
    console.log('   ‚Ä¢ Tabela categories');
    console.log('   ‚Ä¢ Tabela payment_methods');
    console.log('   ‚Ä¢ Tabela transactions');
    console.log('   ‚Ä¢ Categorias padr√£o inseridas');
    console.log('   ‚Ä¢ M√©todos de pagamento padr√£o inseridos');

  } catch (error) {
    console.error('‚ùå Erro durante a verifica√ß√£o:', error);
  }
}

// Executar a verifica√ß√£o
setupDatabase();
